name: CI

on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ test-ci ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      logLevel:
        description: 'Log level'     
        required: true
        default: 'warning'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build-zetasql-linux:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout zetasql
        uses: actions/checkout@v2
        with:
          repository: pgrivachev/zetasql
          path: build/zetasql-linux

      - name: Set variables
        working-directory: ./build/zetasql-linux
        id: vars
        shell: bash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Cache build results
        id: cache-zetasql
        uses: actions/cache@v2
        with:
          path: build/zetasql-linux/bazel-bin/zetasql/local_service/libremote_server.so
          key: ${{ runner.os }}-${{ steps.vars.outputs.sha_short }}-${{ secrets.CACHE_VERSION }}

      - name: Install Bazel
        if: steps.cache-zetasql.outputs.cache-hit != 'true'
        uses: abhinavsingh/setup-bazel@v3
        with:
          version: 3.7.2

      - name: Build
        if: steps.cache-zetasql.outputs.cache-hit != 'true'
        working-directory: ./build/zetasql-linux
        run: bazel build ...

  build:
    runs-on: macos-latest

    needs: build-zetasql-linux

    steps:
      - name: Checkout zetasql
        uses: actions/checkout@v2
        with:
          repository: pgrivachev/zetasql
          path: build/zetasql-macos

      - name: Checkout zetasql-npm
        uses: actions/checkout@v2
        with:
          path: build/zetasql-npm

      - name: Set variables
        working-directory: ./build/zetasql-macos
        id: vars
        shell: bash
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Cache build results
        id: cache-zetasql-macos
        uses: actions/cache@v2
        with:
          path: |
            build/zetasql-macos/bazel-bin/zetasql/local_service/libremote_server.dylib
            build/zetasql-macos/protos
          key: ${{ runner.os }}-${{ steps.vars.outputs.sha_short }}-${{ secrets.CACHE_VERSION }}

      - name: Load cache with linux library
        id: cache-zetasql-linux
        uses: actions/cache@v2
        with:
          path: build/zetasql-linux/bazel-bin/zetasql/local_service/libremote_server.so
          key: Linux-${{ steps.vars.outputs.sha_short }}-${{ secrets.CACHE_VERSION }}

      - name: Install Bazel
        if: steps.cache-zetasql-macos.outputs.cache-hit != 'true'
        uses: abhinavsingh/setup-bazel@v3
        with:
          version: 3.7.2

      - name: Build ZetaSQL
        if: steps.cache-zetasql-macos.outputs.cache-hit != 'true'
        working-directory: ./build/zetasql-macos
        run: bazel build //zetasql/local_service:libremote_server.dylib --copt="-Wno-error=c99-extensions"
        
      - name: Collect proto files
        if: steps.cache-zetasql-macos.outputs.cache-hit != 'true'
        working-directory: ./build/zetasql-macos
        shell: bash
        run: |
          chmod +x ../zetasql-npm/combine_protos.sh
          ../zetasql-npm/combine_protos.sh

      - name: Copy files to zetasql-npm
        working-directory: ./build
        shell: bash
        run: |
          cp zetasql-macos/bazel-bin/zetasql/local_service/libremote_server.dylib zetasql-npm/zetasql/darwin-x86-64/
          cp zetasql-linux/bazel-bin/zetasql/local_service/libremote_server.so zetasql-npm/zetasql/linux-x86-64/
          cp -R zetasql-macos/protos zetasql-npm/protos

      - name: Build and Test
        working-directory: ./build/zetasql-npm
        run: |
          npm install
          npm run compile
          npm run test

      # Setup .npmrc file to publish to npm
      - uses: actions/setup-node@v2
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          node-version: '12.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish
        if: startsWith(github.ref, 'refs/tags/v')
        run: |
          npm publish
          env:
            NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
