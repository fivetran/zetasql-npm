name: Base Workflow

on:
  workflow_call:
    inputs:
      cpp-repo-name:
        required: true
        type: string
      npm-package-name:
        required: true
        type: string
      tag:
        required: true
        type: string

jobs:
  build:
    runs-on: ${{ matrix.os }}

    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}

    strategy:
      matrix:
        include:
          - os: macos-latest
            cache-path: bazel-bin/zetasql/local_service/remote_server
            build-commands: |
              npx @bazel/bazelisk build --copt "-O3" --config=clang //zetasql/local_service:remote_server_executable
              mv bazel-bin/zetasql/local_service/remote_server_executable bazel-bin/zetasql/local_service/remote_server
              chmod +x bazel-bin/zetasql/local_service/remote_server
            correct-paths: |
              mkdir -p bazel-bin/zetasql/local_service/
              mv darwin_x86_64/remote_server_executable bazel-bin/zetasql/local_service/remote_server

          - os: ubuntu-latest
            cache-path: out/linux/amd64/remote_server.so
            build-commands: |
              docker buildx build --file Dockerfile.build --output out --platform linux/amd64 .
              mv out/linux/amd64/remote_server_executable out/linux/amd64/remote_server.so
              chmod +x out/linux/amd64/remote_server.so
            correct-paths: |
              mkdir -p out/linux/amd64/
              mv linux_x86_64/remote_server_executable out/linux/amd64/remote_server.so

    steps:
      - name: checkout C++ library
        uses: actions/checkout@v3
        with:
          repository: fivetran/${{ inputs.cpp-repo-name }}
          ref: 'master'
          fetch-depth: 1

      - name: set variables
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "sha=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT
          echo $(git rev-parse --short HEAD)

      - name: cache zetasql build
        id: cache-zetasql-build
        uses: actions/cache@v3
        with:
          path: ${{ matrix.cache-path }}
          key: ${{ matrix.os }}-${{ steps.vars.outputs.sha_short }}-4

      - name: download artifact
        if: steps.cache-zetasql-build.outputs.cache-hit != 'true'
        id: download-artifact
        uses: dawidd6/action-download-artifact@v2
        with:
          github_token: ${{ secrets.TOKEN }}
          repo: fivetran/${{ inputs.cpp-repo-name }}
          commit: ab3b90b8f8bbd040bdbfe7a1fac10174eba95614
          name: artifacts
          workflow: main.yml
          workflow_conclusion: success

      - name: correct paths
        if: steps.cache-zetasql-build.outputs.cache-hit != 'true'
        run: ${{ matrix.correct-paths }}

      # We also can build it here if needed
      # - name: build
      #   if: steps.cache-zetasql-build.outputs.cache-hit != 'true'
      #   run: |
      #     ${{ matrix.build-commands }}

      - name: upload build result
        uses: actions/upload-artifact@v3
        with:
          name: ${{ inputs.cpp-repo-name }}-${{ matrix.os }}
          path: ${{ matrix.cache-path }}
          if-no-files-found: error

  package:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: checkout zetasql-npm
        uses: actions/checkout@v3
        with:
          path: build/zetasql-npm

      - name: load linux build
        uses: actions/cache@v3
        with:
          path: out/linux/amd64/remote_server.so
          key: ubuntu-latest-${{ needs.build.outputs.sha_short }}-4
          fail-on-cache-miss: true

      - name: load macos build
        uses: actions/cache@v3
        with:
          path: bazel-bin/zetasql/local_service/remote_server
          key: macos-latest-${{ needs.build.outputs.sha_short }}-4
          fail-on-cache-miss: true

      - name: copy files
        working-directory: build
        run: |
          mkdir -p zetasql-npm/${{ inputs.npm-package-name }}/lib/${{ inputs.npm-package-name }}

          mv ../bazel-bin/zetasql/local_service/remote_server zetasql-npm/${{ inputs.npm-package-name }}/lib/${{ inputs.npm-package-name }}
          mv ../out/linux/amd64/remote_server.so zetasql-npm/${{ inputs.npm-package-name }}/lib/${{ inputs.npm-package-name }}

          tar -xzvf zetasql-npm/${{ inputs.npm-package-name }}/bin/darwin-arm-64/remote_server_arm.tar.gz -C zetasql-npm/${{ inputs.npm-package-name }}/lib/${{ inputs.npm-package-name }}
          tar -xzvf zetasql-npm/${{ inputs.npm-package-name }}/bin/linux-arm-64/remote_server_arm.so.tar.gz -C zetasql-npm/${{ inputs.npm-package-name }}/lib/${{ inputs.npm-package-name }}

          cp -R zetasql-npm/${{ inputs.npm-package-name }}/src/${{ inputs.npm-package-name }}/protos zetasql-npm/${{ inputs.npm-package-name }}/lib/${{ inputs.npm-package-name }}/protos

          cd zetasql-npm/${{ inputs.npm-package-name }}/lib/${{ inputs.npm-package-name }}
          chmod +x remote_server*

      - name: build and test
        working-directory: build/zetasql-npm/${{ inputs.npm-package-name }}
        run: |
          echo ${{ github.ref }}
          npm install --prefix ..
          npm run build
          npm run lint

      - name: cache package results
        uses: actions/cache@v3
        with:
          path: build/zetasql-npm
          key: package-results-${{ inputs.npm-package-name }}-${{ github.sha }}-${{ github.ref }}

  e2e-macos:
    needs: package
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - os: macos-11
          - os: macos-latest
          - os: macos-13

    steps:
      - name: load package results
        uses: actions/cache@v3
        with:
          path: build/zetasql-npm
          key: package-results-${{ inputs.npm-package-name }}-${{ github.sha }}-${{ github.ref }}
          fail-on-cache-miss: true

      - name: run e2e test
        working-directory: build/zetasql-npm/${{ inputs.npm-package-name }}
        run: |
          npm ci --prefix ..
          ./e2e.sh

  e2e-linux:
    needs: package
    runs-on: ubuntu-latest

    strategy:
      matrix:
        include:
          - dockerFile: Dockerfile.node19
          - dockerFile: Dockerfile.ubuntu23.04

    steps:
      - name: set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: set up docker buildx
        id: buildx
        uses: docker/setup-buildx-action@v2

      - name: available platforms
        run: echo ${{ steps.buildx.outputs.platforms }}

      - name: load package results
        uses: actions/cache@v3
        with:
          path: build/zetasql-npm
          key: package-results-${{ inputs.npm-package-name }}-${{ github.sha }}-${{ github.ref }}
          fail-on-cache-miss: true

      - name: run e2e test
        working-directory: build/zetasql-npm
        run: docker buildx build --file ${{ matrix.dockerFile }} --build-arg package_name=${{ inputs.npm-package-name }} --platform=linux/amd64 --progress=plain --no-cache . # TODO: ,linux/arm64

  publish-npm:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, format('refs/tags/{0}', inputs.tag))
    needs: [build, package, e2e-macos, e2e-linux]
    steps:
      - name: load package results
        uses: actions/cache@v3
        with:
          path: build/zetasql-npm
          key: package-results-${{ inputs.npm-package-name }}-${{ github.sha }}-${{ github.ref }}
          fail-on-cache-miss: true

      - uses: actions/setup-node@v3
        with:
          node-version: '19.x'
          registry-url: 'https://registry.npmjs.org'

      - name: publish
        working-directory: build/zetasql-npm
        run: |
          npm whoami
          npm publish --workspace=${{ inputs.npm-package-name }} --verbose
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_TOKEN }}

  update-lib-archives:
    needs: build

    runs-on: ubuntu-latest
    steps:
      - name: checkout zetasql-npm
        uses: actions/checkout@v3

      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.cpp-repo-name }}-ubuntu-latest

      - uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.cpp-repo-name }}-macos-latest

      - run: |
          chmod +x remote_server*
          ls -la
          mkdir -p old
          tar -xzvf ${{ inputs.npm-package-name }}/bin/darwin-x86-64/remote_server.tar.gz -C old
          tar -xzvf ${{ inputs.npm-package-name }}/bin/linux-x86-64/remote_server.so.tar.gz -C old

          if ! diff -q remote_server old/remote_server &>/dev/null; then
            tar -zcf ${{ inputs.npm-package-name }}/bin/darwin-x86-64/remote_server.tar.gz remote_server
          fi

          if ! diff -q remote_server.so old/remote_server.so &>/dev/null; then
            tar -zcf ${{ inputs.npm-package-name }}/bin/linux-x86-64/remote_server.so.tar.gz remote_server.so
          fi

      - uses: EndBug/add-and-commit@v9
        with:
          add: '${{ inputs.npm-package-name }}/bin'
          message: 'update artifacts [skip ci]'
