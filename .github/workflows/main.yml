name: CI

on:
  push:
    branches:
    tags:

  workflow_dispatch:

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-latest, ubuntu-latest]
        include:
          - os: macos-latest
          - working-directory: build/zetasql-macos
          - cache-path: build/zetasql-macos/bazel-bin/zetasql/local_service/libremote_server.dylib
          - cache-prefix: macos
          - build-command: |
              bazel build //zetasql/local_service:libremote_server.dylib --copt="-Wno-error=c99-extensions"
              install_name_tool -id "@loader_path/libremote_server.dylib" bazel-bin/zetasql/local_service/libremote_server.dylib

          - os: ubuntu-latest
          - working-directory: build/zetasql-linux
          - cache-path: build/zetasql-linux/bazel-bin/zetasql/local_service/libremote_server.so
          - cache-prefix: linux
          - build-command: bazel build ...
    steps:
      - name: Checkout zetasql
        uses: actions/checkout@v2
        with:
          repository: pgrivachev/zetasql
          path: ${{ matrix.working-directory }}

      - name: Set variables
        id: vars
        working-directory: ${{ matrix.working-directory }}
        run: echo "::set-output name=sha_short::$(git rev-parse --short HEAD)"

      - name: Cache zetasql build
        id: cache-zetasql-build
        uses: actions/cache@v2
        with:
          path: ${{ matrix.cache-path }}
          key: ${{ matrix.cache-prefix }}-${{ steps.vars.outputs.sha_short }}-${{ secrets.CACHE_VERSION }}

      - name: Install Bazel
        if: steps.cache-zetasql-build.outputs.cache-hit != 'true'
        uses: abhinavsingh/setup-bazel@v3
        with:
          version: 3.7.2

      - name: Build
        if: steps.cache-zetasql-build.outputs.cache-hit != 'true'
        working-directory: ${{ matrix.working-directory }}
        run: ${{ matrix.build-command }}

    outputs:
      sha_short: ${{ steps.vars.outputs.sha_short }}

  package:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout zetasql-npm
        uses: actions/checkout@v2
        with:
          path: build/zetasql-npm

      - name: Load build linux
        id: cache-zetasql-linux
        uses: actions/cache@v2
        with:
          path: build/zetasql-linux/bazel-bin/zetasql/local_service/libremote_server.so
          key: linux-${{ needs.build.outputs.sha_short }}-${{ secrets.CACHE_VERSION }}

      - name: Load build macos
        id: cache-zetasql-macos
        uses: actions/cache@v2
        with:
          path: build/zetasql-macos/bazel-bin/zetasql/local_service/libremote_server.dylib
          key: macos-${{ needs.build.outputs.sha_short }}-${{ secrets.CACHE_VERSION }}

      - name: Copy files
        working-directory: build
        run: |
          mkdir -p zetasql-npm/lib/zetasql
          cp zetasql-macos/bazel-bin/zetasql/local_service/libremote_server.dylib zetasql-npm/lib/zetasql/
          cp zetasql-linux/bazel-bin/zetasql/local_service/libremote_server.so zetasql-npm/lib/zetasql/
          cp -R zetasql-npm/src/protos zetasql-npm/lib/protos

      - name: Build and Test
        working-directory: build/zetasql-npm
        run: |
          echo ${{ github.ref }}
          npm install
          npm run compile
          npm run test

      - name: Cache package results
        id: cache-package
        uses: actions/cache@v2
        with:
          path: build/zetasql-npm
          key: package-results-${{ needs.build.outputs.sha_short }}-${{ secrets.CACHE_VERSION }}

  publish-npm:
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    needs: package
    steps:
      - name: Load package results
        id: cache-package-results
        uses: actions/cache@v2
        with:
          path: build/zetasql-npm
          key: package-results-${{ needs.build.outputs.sha_short }}-${{ secrets.CACHE_VERSION }}

      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'
          registry-url: 'https://registry.npmjs.org'

      - name: Publish
        working-directory: build/zetasql-npm
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}
